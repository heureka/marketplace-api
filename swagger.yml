{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Heureka Marketplace API",
    "description": "Public documentation of Heureka Marketplace API services."
  },
  "servers": [
    {
      "url": "https://ssl.heureka.sk/"
    }
  ],
  "paths": {
    "/api/1/products/availability": {
      "get": {
        "summary": "The method returns current data about the requested products.",
        "description": "The method returns current data about the requested products.\n##  Frequently asked questions\n### The store no longer sells the product. What should the answer look like?\nReturn available to false.\n### The store sells the goods, but does not know how long it will be able to deliver the goods. What should the answer look like?\nAvailable another must be true and delivery or must be -1 appropriate text description. In general, what is in the XML feed must be available for purchase on Heureka as well.\n### A customer requests 3 of an item, but the store only has two. What should the answer look like?\nin count Enter a value of 2 . The customer will be notified of this fact.\n### The customer requests 3 pieces, the store has 2 in stock and 1 will arrive in 5 days. What should the delivery value look like?\nvalue The delivery must be the worst possible, so if the store is able to deliver all 3 pieces, it will value 5 .\n### The customer requests 1 piece of the item, but the store has 10 available. So the store will list 10 in the count?\nNot. value The count must be max. the number of pieces that the customer requires.\n",
        "tags": [
          "Egress - Products Availability"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "required": true,
            "description": "API key from Partner Portal",
            "schema": {
              "type": "string",
              "example": "e9a09238d23fb504c663d06553ca4838"
            }
          },
          {
            "name": "products[0][id]",
            "in": "query",
            "required": true,
            "description": "Unique identifier of the product",
            "schema": {
              "type": "string",
              "example": 123
            }
          },
          {
            "name": "products[0][count]",
            "in": "query",
            "description": "Number of ordered products",
            "schema": {
              "type": "string",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the products' availability",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "description": "Success",
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int64",
                          "example": 200
                        },
                        "message": {
                          "type": "string",
                          "example": "Success"
                        },
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "example": "031e1b75-0793-5dfa-9f3a-23a02bad3854"
                        },
                        "version": {
                          "type": "string",
                          "example": "v1.0.0"
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "products": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "example": "ABC123"
                                      },
                                      "available": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "count": {
                                        "type": "integer",
                                        "example": 3
                                      },
                                      "delivery": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "Tactical Velvet Smoothie pre Apple iPhone 14 57983109814"
                                      },
                                      "price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 10.99
                                      },
                                      "related": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "title": {
                                              "type": "string",
                                              "example": "Free gift bag"
                                            }
                                          }
                                        }
                                      },
                                      "priceTotal": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 10.99
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400 Bad request. When required parameters were not supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1api~11~1products~1availability/get/responses/404/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400
                        },
                        "message": {
                          "type": "string",
                          "example": "400 Bad Request"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "404 record not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "description": "Error",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 500
                        },
                        "message": {
                          "type": "string",
                          "example": "Internal Server Error"
                        },
                        "errors": {
                          "type": "array",
                          "example": []
                        },
                        "version": {
                          "type": "string",
                          "example": "v2.0.0"
                        },
                        "data": {
                          "type": "array",
                          "nullable": true,
                          "example": []
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 404
                        },
                        "message": {
                          "type": "string",
                          "example": "404 Not Found"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/cart/{apiKey}/1/payout-report": {
      "post": {
        "summary": "Get a day's payout report in CSV format",
        "description": "Get all payout data for a day in CSV format.\n\n In the CSV data are separated by a semicolon (;).\n\n The file includes the following columns (in the partner's respective language):\n\n Order number, Order date, Payout type, Payout gross price, Delivery fee, Gross commission, Total amount, Payout amount.\n\n For CZ/SK partners there are three additional columns: Variable symbol, Internal id, Reference number",
        "tags": [
          "Ingress - Payout Report"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "description": "API key from Partner Portal",
            "schema": {
              "type": "string",
              "example": "e9a09238d23fb504c663d06553ca4838"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "day"
                ],
                "properties": {
                  "day": {
                    "type": "string",
                    "format": "date",
                    "example": "2023-09-20T00:00:00.000Z",
                    "description": "Date of payout"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payout Report CSV generated successfully.",
            "content": {
              "text/csv": {
                "schema": {
                  "description": "Payout data in CSV format",
                  "type": "string",
                  "example": "column1;column2;column3;...\ndata1;data2;data3;..."
                }
              }
            }
          },
          "422": {
            "description": "Show validation error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Validation error(s)!"
                    },
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the API",
                      "example": "v1.0.0"
                    },
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "a1b47cd1-1234-4ab2-a12b-1234bd0a4bc3"
                    },
                    "data": {
                      "type": "array",
                      "nullable": true,
                      "example": [],
                      "items": {
                        "type": "object"
                      }
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "day": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "validation.required"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "A server error happened during handling of request."
          }
        }
      }
    }
  }
}
